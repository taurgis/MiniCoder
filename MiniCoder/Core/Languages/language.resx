<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="audioBitrate" xml:space="preserve">
    <value>Bit Rate:</value>
  </data>
  <data name="audioCodec" xml:space="preserve">
    <value>Codec:</value>
  </data>
  <data name="audioOptionsTitle" xml:space="preserve">
    <value>Audio Options</value>
  </data>
  <data name="containerFormat" xml:space="preserve">
    <value>Format:</value>
  </data>
  <data name="containerOptionsTitle" xml:space="preserve">
    <value>Container</value>
  </data>
  <data name="encodeStartButton" xml:space="preserve">
    <value>Start</value>
  </data>
  <data name="encodeStopButton" xml:space="preserve">
    <value>Stop</value>
  </data>
  <data name="filterOptionsTitle" xml:space="preserve">
    <value>Filter Options</value>
  </data>
  <data name="inputColumn2StatusEncoding" xml:space="preserve">
    <value>Encoding</value>
  </data>
  <data name="inputColumn2StatusError" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="inputColumn2StatusReady" xml:space="preserve">
    <value>Ready</value>
  </data>
  <data name="inputColumn1Title" xml:space="preserve">
    <value>Input (Mark if file is VFR)</value>
  </data>
  <data name="inputTabTitle" xml:space="preserve">
    <value>Input</value>
  </data>
  <data name="logTabTitle" xml:space="preserve">
    <value>Log</value>
  </data>
  <data name="newsTabTitle" xml:space="preserve">
    <value>News</value>
  </data>
  <data name="optionsTabTitle" xml:space="preserve">
    <value>Options</value>
  </data>
  <data name="preField" xml:space="preserve">
    <value>Field:</value>
  </data>
  <data name="preprocessingOptionsTitle" xml:space="preserve">
    <value>Pre-Processing</value>
  </data>
  <data name="preResize" xml:space="preserve">
    <value>Resize:</value>
  </data>
  <data name="programTitle" xml:space="preserve">
    <value>MiniCoder Encoding GUI</value>
  </data>
  <data name="settingsTabTitle" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="videoBitRate" xml:space="preserve">
    <value>Bit Rate:</value>
  </data>
  <data name="videoFileSize" xml:space="preserve">
    <value>File Size:</value>
  </data>
  <data name="videoOptionsTitle" xml:space="preserve">
    <value>Video Options</value>
  </data>
  <data name="videoQuality" xml:space="preserve">
    <value>Quality</value>
  </data>
  <data name="videoQualityOptions" xml:space="preserve">
    <value>Medium;High;Very High;Very High (+50mb anime);Very High (-50mb anime);Very High (TV-Shows/Movies);CRF (Anime);Ipod;PSP;PS3/XBOX</value>
  </data>
  <data name="whenDoneOptions" xml:space="preserve">
    <value>Do Nothing;Hibernate;Standby;Shutdown</value>
  </data>
  <data name="preResizeOptions" xml:space="preserve">
    <value>None;Soft;Neutral;Sharp;Very Sharp (Lanczos64);Very Sharp (Spline36)</value>
  </data>
  <data name="applicationsButton" xml:space="preserve">
    <value>Applications</value>
  </data>
  <data name="customButton" xml:space="preserve">
    <value>Custom</value>
  </data>
  <data name="encodingIgnoreAttachments" xml:space="preserve">
    <value>Ignore Attachments</value>
  </data>
  <data name="encodingIgnoreAudio" xml:space="preserve">
    <value>Ignore Audio</value>
  </data>
  <data name="encodingIgnoreChapters" xml:space="preserve">
    <value>Ignore Chapters</value>
  </data>
  <data name="encodingIgnoreSubs" xml:space="preserve">
    <value>Ignore Subs</value>
  </data>
  <data name="encodingShowVideoPreview" xml:space="preserve">
    <value>Show video preview (Debug Only)</value>
  </data>
  <data name="encodingTitle" xml:space="preserve">
    <value>Encoding</value>
  </data>
  <data name="outputDirectory" xml:space="preserve">
    <value>Output Dir.:</value>
  </data>
  <data name="outputDisableVideoAdvert" xml:space="preserve">
    <value>Disable video title advert</value>
  </data>
  <data name="outputSettingsTitle" xml:space="preserve">
    <value>Output Settings</value>
  </data>
  <data name="postDenoiser" xml:space="preserve">
    <value>Denoiser:</value>
  </data>
  <data name="postDenoiserOptions" xml:space="preserve">
    <value>None;Light;Medium;Heavy;Insane</value>
  </data>
  <data name="postprocessingOptionsTitle" xml:space="preserve">
    <value>Post-Processing</value>
  </data>
  <data name="postSharpen" xml:space="preserve">
    <value>Sharpen:</value>
  </data>
  <data name="postSharpenOptions" xml:space="preserve">
    <value>None;Light;Medium;Heavy;Insane</value>
  </data>
  <data name="postSubtitle" xml:space="preserve">
    <value>Subtitle</value>
  </data>
  <data name="preWidthHeight" xml:space="preserve">
    <value>Width/Height:</value>
  </data>
  <data name="processPriority" xml:space="preserve">
    <value>Priority:</value>
  </data>
  <data name="processPriorityOptions" xml:space="preserve">
    <value>Low;Below Normal;Normal;Above Normal;High;Realtime</value>
  </data>
  <data name="processSettingsTitle" xml:space="preserve">
    <value>Process Settings</value>
  </data>
  <data name="saveButton" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="customFilterCancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="customFilterNote" xml:space="preserve">
    <value>If you want to disable a default filter disable it in the Settings Page.</value>
  </data>
  <data name="customFilterOK" xml:space="preserve">
    <value>Ok</value>
  </data>
  <data name="customFilterText" xml:space="preserve">
    <value>Enter Your Custom Avisynth Filters</value>
  </data>
  <data name="customFilterTitle" xml:space="preserve">
    <value>Custom Filters</value>
  </data>
  <data name="encodingNextError" xml:space="preserve">
    <value>Continue to next file after error</value>
  </data>
  <data name="infoLabel" xml:space="preserve">
    <value>GUI Ready</value>
  </data>
  <data name="inputColumn2StatusTitle" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="tooltipAudioBr" xml:space="preserve">
    <value>Variable Audio Bitrate determines the quality of the audio output.
The higher the bitrate the better the quality.

Recommended: Minimum 32 Kbps</value>
  </data>
  <data name="tooltipAudioCodec" xml:space="preserve">
    <value>Both audio codecs provide high quality at low bitrates.

Recommended: Nero AAC</value>
  </data>
  <data name="tooltipContainer" xml:space="preserve">
    <value>Matroska: 
The Matroska Multimedia Container is an open standard free container format, a file 
format that can hold an unlimited number of video, audio, picture or subtitle tracks
 inside a single file.

MP4:
It is a multimedia container format standard specified as a part of MPEG-4. It is most 
commonly used to store digital audio and digital video streams, especially those defined
 by MPEG.</value>
  </data>
  <data name="tooltipDenoise" xml:space="preserve">
    <value>Video denoising is the process of removing noise 
from a video signal.</value>
  </data>
  <data name="tooltipField" xml:space="preserve">
    <value>FieldDeinterlace: 
This filter provides functionality similar to the postprocessing function 
of Telecide. You can use it for pure interlaced streams</value>
  </data>
  <data name="tooltipFileSize" xml:space="preserve">
    <value>Target File Size means that the program will try to get the
output filesize as close as it can to the determined size.

Things that could make the output bigger than set:
- Attachments (Some fonts take over 5mb)
- VFR (Variable FrameRate)

Recommended
- Minimum 50 mb for 20 min anime
- Minimum 120 mb for TV-Show
- Minmum 300mb for a Movie</value>
  </data>
  <data name="tooltipQuality" xml:space="preserve">
    <value>Quality determines the video quality of the outputted file.

Settings:
- Medium (Fast encoding time)
- High (Normal encoding time)
- Verry High (Long encoding time)
- PSP (Fast, can be played on PSP)
- IPOD (Fast, can be played on Ipod)
- PS3/XBOX (Fast, can be played on Ipod)</value>
  </data>
  <data name="tooltipResize" xml:space="preserve">
    <value>With a resizing filter you can easily resize a video to a 
preferred aspect ratio. Using these filters you can either
soften the image or sharpen it.

Recommended: 
- Soft for low bitrates
- Sharp for high bitrates</value>
  </data>
  <data name="tooltipSub" xml:space="preserve">
    <value>Select Subtitle file to use</value>
  </data>
  <data name="tooltipVideoBr" xml:space="preserve">
    <value>Average (Variable) Bit Rate is used to determine the best quality at the lowest possible quantizizer 
while maintaining the average bit rate. The higher the bitrate, the better the output quality. 

In this mode the target video filesize can be predicted. 
A basic calculation is 50 bitrate equals 10mb every 20 mins.

Recommended: 
- Minimum 250 for anime
- Minimum 300 for TV-Shows/movies</value>
  </data>
  <data name="tooltipVideoCodec" xml:space="preserve">
    <value>X264: It is a free software library for encoding video streams 
into the H.264/MPEG-4 AVC format.

Xvid (formerly "XviD") is a video codec library following the MPEG-4 standard,
 specifically MPEG-4 Part 2 Advanced Simple Profile (ASP). It uses ASP 
features.</value>
  </data>
  <data name="tooltipWidthHeight" xml:space="preserve">
    <value>The width and heigth of the re-encoded video.</value>
  </data>
  <data name="videoCodec" xml:space="preserve">
    <value>Codec:</value>
  </data>
  <data name="whenDone" xml:space="preserve">
    <value>When done</value>
  </data>
</root>